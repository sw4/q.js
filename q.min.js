function format_percentage(d,c){return(100*d).toFixed(c||2)}var Array={max:function(d){return Math.max.apply(Math,d)},min:function(d){return Math.min.apply(Math,d)}};function statMean(d){var c=0,f=d.length;d.forEach(function(d){c+=parseFloat(d)});return c/f}function statVar(d){var c=d.length,f=statMean(d),g=0;d.forEach(function(b){g+=Math.pow(parseFloat(b)-parseFloat(f),2)});return g/c}function statStdDev(d){return Math.sqrt(statVar(d))}
function statVar(d){var c=d.length,f=statMean(d),g=0;d.forEach(function(b){g+=Math.pow(b-f,2)});return 1<c?g/(c-1):g}function statHistVar(d,c){var f=d.slice(),g=f.length;f.sort();f.reverse();c=c||90;return f[Math.ceil((g-1)*(1<c?0.01*c:c))]}function statRange(d){return Array.max(d)-Array.min(d)}
function statSimpleRegression(d,c){for(var f=Array.min([d.length,c.length]),g=statMean(d),b=statMean(c),e=0,a=0,h=0,k=0;k<f;k++)e+=Math.pow(d[k]-g,2),a+=Math.pow(c[k]-b,2),h+=(d[k]-g)*(c[k]-b);output.rSlope=h/e||0;output.rIntercept=(100*(b-output.rSlope*g)).toFixed(3)||0;output.rError=(100*Math.sqrt((a-output.rSlope*h)/(f-2))).toFixed(2);output.rCorrCoef=h/Math.sqrt(e*a);output.rCoefDetermination=Math.pow(output.rCorrCoef,2);output.rCovar=(h/(f-1)*100).toFixed(3);output.rTStat=(output.rCorrCoef/Math.sqrt((1-
output.rCoefDetermination)/(f-2))).toFixed(2);output.rSlope=output.rSlope.toFixed(3);output.rCorrCoef=output.rCorrCoef.toFixed(3);output.rCoefDetermination=output.rCoefDetermination.toFixed(2);return output}
function statSeries(d){var c={};c.value.push("");c.positive.push("");c.negative.push("");c.cumulative.push("");c.cumulative[0]=100;d.forEach(function(d){value=parseFloat(d);c.value.push(value);0<=value?c.positive.push(value):c.negative.push(value);c.cumulative.push(c.cumulative[c.cumulative.length-1]+=c.cumulative[c.cumulative.length-1]*value)});c.cumulative.shift();return c}
function dataCompile(d,c,f){function g(a,b){return months=b.getMonth()-a.getMonth()+12*(b.getFullYear()-a.getFullYear())}var b=$.extend(!0,[],d),e=[];c||f?(e.normMin=Date.parse(c),e.normMax=Date.parse(f)):$.each(b,function(a){0==a?(e.normMin=Date.parse(b[a].data.date[0]),e.absMin=Date.parse(b[a].data.date[0])):Date.parse(b[a].data.date[0])>e.normMin?e.normMin=Date.parse(b[a].data.date[0]):Date.parse(b[a].data.date[0])<e.absMin&&(e.absMin=Date.parse(b[a].data.date[0]));0==a?(e.normMax=Date.parse(b[a].data.date[b[a].data.date.length-
1]),e.absMax=Date.parse(b[a].data.date[b[a].data.date.length-1])):Date.parse(b[a].data.date[b[a].data.date.length-1]).getTime()<e.normMax.getTime()?e.normMax=Date.parse(b[a].data.date[b[a].data.date.length-1]):Date.parse(b[a].data.date[b[a].data.date.length-1]).getTime()>e.absMax.getTime()&&(e.absMax=Date.parse(b[a].data.date[b[a].data.date.length-1]))});e.normRange=g(e.normMin,e.normMax);_instrument=[];$.each(b,function(a){normArrayShift=g(Date.parse(b[a].data.date[0]),e.normMin);normArrayPop=-1*
g(Date.parse(b[a].data.date[b[a].data.date.length-1]),e.normMax);0<normArrayShift&&(b[a].data.date.splice(0,normArrayShift),b[a].data.performance.splice(0,normArrayShift),b[a].data.price.splice(0,normArrayShift));0<normArrayPop&&(b[a].data.date.splice(-1*normArrayPop,normArrayPop),b[a].data.performance.splice(-1*normArrayPop,normArrayPop),b[a].data.price.splice(-1*normArrayPop,normArrayPop));_instrument[a]={};_instrument[a].type=b[a].type;_instrument[a].name=b[a].name;_instrument[a].rfr=parseFloat(b[a].rfr/
100);_instrument[a].color=b[a].color;_instrument[a].date={};_instrument[a].date.series={};_instrument[a].date.series.value=b[a].data.date;_instrument[a].price={};_instrument[a].price.series={};_instrument[a].price.series.value=b[a].data.price;_instrument[a].performance={};_instrument[a].performance.series={};_instrument[a].performance.series=statSeries(b[a].data.performance);_instrument[a].performance.regression=statSimpleRegression(_instrument[a].performance.series.value,_instrument[0].performance.series.value);
_instrument[a].performance.count=_instrument[a].performance.series.value.length;_instrument[a].performance.cuml1yRtn=13>_instrument[a].performance.count?format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[0])/_instrument[a].performance.series.cumulative[0]):format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[_instrument[a].performance.count-
13])/_instrument[a].performance.series.cumulative[_instrument[a].performance.count-13]);_instrument[a].performance.cuml3yRtn=38>_instrument[a].performance.count?format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[0])/_instrument[a].performance.series.cumulative[0]):format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[_instrument[a].performance.count-
37])/_instrument[a].performance.series.cumulative[_instrument[a].performance.count-37]);_instrument[a].performance.cuml5yRtn=62>_instrument[a].performance.count?format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[0])/_instrument[a].performance.series.cumulative[0]):format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[_instrument[a].performance.count-
61])/_instrument[a].performance.series.cumulative[_instrument[a].performance.count-61]);_instrument[a].performance.cuml7yRtn=84>_instrument[a].performance.count?format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[0])/_instrument[a].performance.series.cumulative[0]):format_percentage((_instrument[a].performance.series.cumulative[_instrument[a].performance.count-1]-_instrument[a].performance.series.cumulative[_instrument[a].performance.count-
83])/_instrument[a].performance.series.cumulative[_instrument[a].performance.count-83]);_instrument[a].performance.stdDev=statStdDev(_instrument[a].performance.series.value);_instrument[a].performance.stdDevPositive=statStdDev(_instrument[a].performance.series.positive);_instrument[a].performance.stdDevNegative=statStdDev(_instrument[a].performance.series.negative);_instrument[a].performance.annStdDev=_instrument[a].performance.stdDev*Math.sqrt(12);_instrument[a].performance.annStdDevPositive=_instrument[a].performance.stdDevPositive*
Math.sqrt(12);_instrument[a].performance.annStdDevNegative=_instrument[a].performance.stdDevNegative*Math.sqrt(12);_instrument[a].performance.stdDev=format_percentage(_instrument[a].performance.stdDev);_instrument[a].performance.stdDevPositive=format_percentage(_instrument[a].performance.stdDevPositive);_instrument[a].performance.stdDevNegative=format_percentage(_instrument[a].performance.stdDevNegative);_instrument[a].performance.range=format_percentage(statRange(_instrument[a].performance.series.value));
_instrument[a].performance.histVar95=format_percentage(statHistVar(_instrument[a].performance.series.value,95));_instrument[a].performance.max=format_percentage(Array.max(_instrument[a].performance.series.value));_instrument[a].performance.min=format_percentage(Array.min(_instrument[a].performance.series.value));_instrument[a].performance.posCount=_instrument[a].performance.series.positive.length;_instrument[a].performance.negCount=_instrument[a].performance.series.negative.length;_instrument[a].performance.negMean=
format_percentage(statMean(_instrument[a].performance.series.negative));_instrument[a].performance.negPercentage=format_percentage(_instrument[a].performance.negCount/_instrument[a].performance.count);_instrument[a].performance.posMean=format_percentage(statMean(_instrument[a].performance.series.positive));_instrument[a].performance.posPercentage=format_percentage(_instrument[a].performance.posCount/_instrument[a].performance.count);_instrument[a].performance.ttlReturn=(_instrument[a].performance.series.cumulative[_instrument[a].performance.series.cumulative.length-
1]-100)/100;_instrument[a].performance.annCumlReturn=Math.pow(1+_instrument[a].performance.ttlReturn,1/(_instrument[a].performance.count/12))-1;_instrument[a].performance.compoundRtn=Math.pow(1+_instrument[a].performance.ttlReturn,1/_instrument[a].performance.count)-1;_instrument[a].performance.annCompoundRtn=format_percentage(_instrument[a].performance.compoundRtn*Math.sqrt(12));_instrument[a].performance.compoundRtn=format_percentage(_instrument[a].performance.compoundRtn);_instrument[a].performance.ttlReturn=
format_percentage(_instrument[a].performance.ttlReturn);_instrument[a].performance.sharpe=((_instrument[a].performance.annCumlReturn-(Math.pow(1+_instrument[0].rfr,12)-1))/_instrument[a].performance.annStdDev).toFixed(2);_instrument[a].performance.sortino=((_instrument[a].performance.annCumlReturn-(Math.pow(1+_instrument[0].rfr,12)-1))/_instrument[a].performance.annStdDevNegative).toFixed(2);0<a&&(_instrument[a].performance.jensen=(parseFloat(_instrument[0].performance.annCumlReturn/100)-parseFloat(Math.pow(1+
_instrument[0].rfr,12)-1+_instrument[a].performance.regression.rSlope)*parseFloat(_instrument[a].performance.annCumlReturn-(Math.pow(1+_instrument[0].rfr,12)-1))).toFixed(3));_instrument[a].performance.annCumlReturn=format_percentage(_instrument[a].performance.annCumlReturn);_instrument[a].performance.annStdDev=format_percentage(_instrument[a].performance.annStdDev);_instrument[a].performance.annStdDevPositive=format_percentage(_instrument[a].performance.annStdDevPositive);_instrument[a].performance.annStdDevNegative=
format_percentage(_instrument[a].performance.annStdDevNegative)});sliderInit();pluginInit()};